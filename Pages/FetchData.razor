@page "/fetchdata"
@inject HttpClient Http
@using System.Reflection
@using TestExcelImport.Models
@using TestExcelImport.Shared

@using System.Data;
@using System.IO;
@using NPOI.XSSF.UserModel;
@using NPOI.SS.UserModel;

<PageTitle>Import Excel File</PageTitle>
<InputFile OnChange="@ImportExcelFile" />
<MudText Typo="Typo.h3" GutterBottom="true">File Content</MudText>
<MudText Class="mb-8">This table consists of data read from the imported excel file</MudText>

<MudTable Items="@data" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        @foreach (string title in RequiredColumnHeaders)
        {
            <MudTh>@title</MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="First Name">@context.FirstName</MudTd>
        <MudTd DataLabel="Last Name">@context.LastName</MudTd>
        <MudTd DataLabel="Age">@context.Age</MudTd>
    </RowTemplate>
</MudTable>

@code {
    private bool _hidePosition;
    private bool _loading;

    private List<string> RequiredColumnHeaders = new();

    private List<ExcelEntry> data = new List<ExcelEntry>();

    private List<string> GetColumnHeaders()
    {
        List<string> headers = new() { "First Name", "Last Name", "Age" };
        return headers;
    }

    async Task ImportExcelFile(InputFileChangeEventArgs e)
    {
        _loading = true;
        // Setup Column Headers
        RequiredColumnHeaders = GetColumnHeaders();

        var fileStream = e.File.OpenReadStream();
        var ms = new MemoryStream();
        await fileStream.CopyToAsync(ms);
        fileStream.Close();
        ms.Position = 0;

        ISheet sheet;
        var xsswb = new XSSFWorkbook(ms);
        sheet = xsswb.GetSheetAt(0);

        IRow headersRow = sheet.GetRow(0);
        //Validate headers
        for (var j = 0; j < RequiredColumnHeaders.Count; j++)
        {
            ICell cell = headersRow.GetCell(j);
            if (cell.ToString() != RequiredColumnHeaders[j])
            {
                return;
            }
        }
        //Get Row Data
        for (var j = (sheet.FirstRowNum + 1); j <= sheet.LastRowNum; j++)
        {
            var r = sheet.GetRow(j);
            ExcelEntry ee = new();
            ee.FirstName = r.GetCell(0).ToString() ?? "n/a";
            ee.LastName = r.GetCell(1).ToString() ?? "n/a";
            ee.Age = r.GetCell(2).ToString() ?? "n/a";
            data.Add(ee);
        }
        _loading = false;
    }
}
